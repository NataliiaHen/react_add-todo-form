{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todoWithUsers","userId","usersFromServer","find","currentUser","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","handleSubmit","event","preventDefault","newTodo","titleIsValid","trim","length","userIsValid","Math","max","currentTodos","action","method","onSubmit","htmlFor","type","value","placeholder","onChange","target","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b83a55a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst todoWithUsers = todosFromServer.map((todo) => {\n  const user = usersFromServer.find(\n    (currentUser) => currentUser.id === todo.userId,\n  );\n\n  return { user, ...todo };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todoWithUsers);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos((currentTodos) => [\n      ...currentTodos,\n      newTodo,\n    ]);\n  };\n\n  const getId = () => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const titleIsValid = title.trim().length > 0;\n    const userIsValid = userId !== 0;\n\n    setHasTitleError(!titleIsValid);\n    setHasUserError(!userIsValid);\n\n    if (!titleIsValid || !userIsValid) {\n      return;\n    }\n\n    addTodo({\n      user: usersFromServer.find(currentUser => currentUser.id === userId),\n      id: getId(),\n      title,\n      completed: false,\n      userId,\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"title\">\n            Title:\n          </label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"user\"\n          >\n            User:\n          </label>\n\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n            required\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onSubmit={handleSubmit}>\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}